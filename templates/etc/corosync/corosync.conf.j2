totem {
	version: 2
	cluster_name: {{ corosync_cluster_name }}
	token: 3000
	token_retransmits_before_loss_const: 10
	clear_node_high_bit: yes
	crypto_cipher: none
	crypto_hash: none
        # Turn off the virtual synchrony filter
        vsftype: none
        # Enable encryption (2)
        secauth: on

        # How many threads to use for encryption/decryption
        threads: 0

        # This specifies the redundant ring protocol, which may be
        # none, active, or passive. (3)
        rrp_mode: active
	
	interface {
		ringnumber: 0
		bindnetaddr: {{ corosync_bindnet_addr }}
		mcastport: {{ corosync_mcastport }}
		ttl: 1
	}
}

amf {
     mode: disabled
}

service {
        # Load the Pacemaker Cluster Resource Manager (5)
        ver:       1
        name:      pacemaker
}

aisexec {
        user:   root
        group:  root
}

logging {
	fileline: off
	to_stderr: no
	to_logfile: no
	to_syslog: yes
	syslog_facility: daemon
	debug: off
	timestamp: on
	logger_subsys {
		subsys: QUORUM
		debug: off
	}
}

quorum {
	provider: corosync_votequorum
	expected_votes: {{ corosync_expected_votes }}
{% if corosync_wait_for_all is defined and corosync_wait_for_all %}
	wait_for_all: 1
{% endif %}
{% if corosync_last_man_standing is defined and corosync_last_man_standing %}
	last_man_standing: 1
{% endif %}
}

{% if corosync_unicast_mode %}
nodelist{
{% for host in groups[pacemaker_cluster_group] %}
	node {
		ring0_addr: {{ hostvars[host]['corosync_bindnet_addr'] }}
		name: {{ host }}
		nodeid: {{ loop.index + 1 }}
	}
{% endfor %}
}
{% endif %}
